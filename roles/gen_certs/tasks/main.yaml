- name: create a local cert directory to generate certificates
  file:
    path: "{{ local_certs_dir }}"
    state: directory

- name: copy ca-config.json file
  copy:
    src: ca-config.json
    dest: "{{ local_certs_dir }}/"

- name: generate *-csr.json file
  template:
    src: "{{ item }}.j2"
    dest: "{{ local_certs_dir }}/{{item}}"
  with_items:
    - admin-csr.json
    - ca-csr.json
    - kube-proxy-csr.json
    - kubernetes-csr.json
    - etcd-csr.json

- name: generate certificates
  shell: |
    cd "{{ local_certs_dir }}"
    cfssl gencert -initca ca-csr.json | cfssljson -bare ca
    cfssl gencert  -ca=ca.pem  -ca-key=ca-key.pem  -config=ca-config.json  -profile=kubernetes \
      admin-csr.json | cfssljson -bare admin
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes \
      kube-proxy-csr.json | cfssljson -bare kube-proxy
    #cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
    #  -hostname=${K8S_SVC_ADDR},${master_nodes_list},${master_ips_list},127.0.0.1,kubernetes.default \
    #  -profile=kubernetes  kubernetes-csr.json | cfssljson -bare kubernetes
